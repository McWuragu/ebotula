IRC-Bot Spezifikationen

Commandos
---------
!hello
	- legt neuen Account an
	- darf jeder

!ident <login> <pass>
	- identifizieren gegenüber dem Bot

!logoff
	- ausloggen beim Bot

!mode [channel] <login> <option>
	- setzt die Modes eines Login für den jeweiligen Channel
	- darf nur master und owner

	options:
		+/-o	Opperator
		+/-v	Voice
		+/-m	Master
		+/-e	Owner

!mode <channel> <option>
	- setzt die Mode für den IRC-Channel
	- darf nur master und owner
	
	options: 
		- identisch mir irc channelmodes

!greating [channel] <text>
	- setzt eine Begrüssung die der Bot per /notice sendet

!pass	<pass>
	- setzt das  password nach dem ident

!userlist [channel]
	- listet die userliste 
	- alle oder nur für den angegeben channel
	- darf nur der master und owner

!banlist [channel]
	-listet die Banliste
	- alle oder nur für den angegeben channel
	- darf nur master und owner

!help [befehl]
	- liste befehls hilfe
	- übersicht oder für einen Befehl

!ban [channel] <nick>
	- bannt ein  user
	- darf master, owner und op

!kick [channel] <nick>
	- kicket ein  user
	- darf master, owner und op

!allban [channel] <nick>
	- bannt einen User in allen Channels  wo der Bot ist
	- darft nur master

!timeban [channel] <nick> <time>
	- bannt einen  User für eine bestimmte Zeit
	- darf  nur amster, owner und op

!topic [channel] <text>
	- setzt die Topic für den aktuellen channel
	- darf master, owner und op
	
!addchannel <channel>
	- der Bot joint  diesem Channel
	- fügt in in seiner liste ein
	- darf nur master
	
!rmchannel <channel>
	- verläst den  aktuellen channel
	- entfernt ihn aus der liste
	- darf nur der master
	
!join <channel>
	- der Bot joint  diesem Channel
	- darf nur master

!part
	- verläst den  aktuellen channel
	- entfernt ihn aus der liste
	- darf nur der master
!die
	- beendet den Bot
	- darf nur master

!restart
	- amcht einen restart des bots
	- darf nur master
	- stop and start
	- darf nur mastr

!version
	- gibt die versions information aus

!channels
	-  listet die channel in den der Bot ist


Properties
----------
- Programiersprache C oder c++
- nach !ident automatisches setzen der Modes des Users
- Master immer op wo der Bot ist
- One-File-DB für User (vielleicht dbm)
- One-File-DB für Channels (vielleicht dbm)
- IRC-Bot erzeug eine Leere DB
- initialiesierung des ersten Master per Hand
- wenn User letzten Channel verläst ist automatisches logout
- nach n Tagen erlischt der Account automatisch
- n-maliges probieren, wenn  Nickname schon vergeben ist und mit  Unterstrich den Nick erweitern
- wenn der Bot kein op hat, macht er n mal Channelcycle nach delta t 
- nach Channelcycle msg  und bitten um op
- fünf Ebnen der Rechte von Usern
	- nothing (userer ohne Login)
	- voice
	- op
	- owner
	- master
- zur Runtime ein Prozess der Inputstream filtert
- relevante Einträge in msg-Queue leiten
- Child-Prozesse lesen  zyklisch die msg-Queue
- Child-Prozesse arbeiten Einträge up
- Steuerung des Bots per Konfigurationsdatei
- Parent-Prozess prüft Füllstand der msg-queue und erzeugt child Prozesse und beendet dies auch.

Kommandozeilenoptionen
----------------------
ircbot [Options]

        Options:
        -b name         Set  the name  of the bot.
        -d path         Use this path for the database
        -f file         Use this config file.
        -h              Print this help info.
        -m              Create a bot master.
        -p port         Set the port of the irc server.
        -r string       Set the output  for a request of the real name.
        -s server       Set the irc server name.
        -t number       Set the number of creating  threads.
        -v              Print version.

Konfigurationsfileanträge
-------------------------
# Config file for  the lugse irc bot
# Kommentar

botname = Tux
realname="IRC Bot"
threadlimit= 6
servername=irc.fh-lausitz.de
port = 6667
databasepath=/var/ircbot


Aufbau der Datenbank
--------------------
- 4 Dateien (user.dbf,channel.dbf,login.dbf,access.dbf)
- user.dbf:
	- Login und Password	      
	- Login ist  Key
	- Passworter per crypt
- channel.dbf:
	- Channelname,Topic,Mode,Greating
	- Channelname ist Key
	- Werte durch Newline  getrennt
- login.dbf:
	- Netmaske und Login
	- Netmaske ist Key
	- Netmaske ist user@host.domain ohne den Nickname
	- wird bei jedem Start neuangelegt
- access.dbf:
	- Login,Channel, Rechte
	- Login+Channel ist Key
	- Master nur Login als Key
- banlist.dbf:
	- banlist und  shitlist
	- Netmaske und Channel
	- Channel gleich * dann Shiltlisteintrag


